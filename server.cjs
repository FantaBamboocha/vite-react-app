const express = require("express");
const bodyParser = require("body-parser");
const cors = require("cors");

const app = express();
app.use(bodyParser.json());
app.use(cors());

let data = [
  {
    id: 0,
    imageUrl:
      "https://media.dodostatic.net/image/r:584x584/11EEF45FDF8D3091A8826B43F4026BAB.avif",
    title: "–ë–∞–≤–∞—Ä—Å–∫–∞—è",
    types: [0, 1],
    sizes: [26, 30, 40],
    price: 803,
    category: "spicy",
    rating: 4,
  },
  {
    id: 1,
    imageUrl:
      "https://media.dodostatic.net/image/r:584x584/11EE961045E96CA6A0CE4F904FB33876.avif",
    title: "–ú—è—Å–Ω–æ–π –º–∏–∫—Å —Å –±–∞–≤–∞—Ä—Å–∫–∏–º–∏ –∫–æ–ª–±–∞—Å–∫–∞–º–∏",
    types: [0],
    sizes: [26, 40],
    price: 245,
    category: "meat",
    rating: 6,
  },
  {
    id: 2,
    imageUrl:
      "https://media.dodostatic.net/image/r:584x584/11EEAAF750E6DC4682FC61C90C5F774F.avif",
    title: "–ö—Ä–µ–≤–µ—Ç–∫–∏ —Å–æ —Å–ª–∞–¥–∫–∏–º —á–∏–ª–∏",
    types: [0],
    sizes: [26, 40],
    price: 295,
    category: "spicy",
    rating: 4,
  },
  {
    id: 3,
    imageUrl:
      "https://media.dodostatic.net/image/r:584x584/11EE7D5EC72C18AD947C4FCBCD336C28.avif",
    title: "–°—ã—Ä–Ω–∞—è üå±üë∂",
    types: [1],
    sizes: [26, 30, 40],
    price: 275,
    category: "vegetarian",
    rating: 2,
  },
  {
    id: 4,
    imageUrl:
      "https://media.dodostatic.net/image/r:584x584/11EEAB0F56776EB287BCE155BA45160A.avif",
    title: "–ß–∏–∫–µ–Ω –±–æ–º–±–æ–Ω–∏",
    types: [0, 1],
    sizes: [26, 30, 40],
    price: 415,
    category: "closed",
    rating: 8,
  },
  {
    id: 5,
    imageUrl:
      "https://media.dodostatic.net/image/r:584x584/11EEAAF6BCA45D9FAD523E13EE74F1C0.avif",
    title: "–ö–∞–Ω—Ç—Ä–∏-–ø–∏—Ü—Ü–∞",
    types: [0],
    sizes: [30, 40],
    price: 580,
    category: "grill",
    rating: 2,
  },
  {
    id: 6,
    imageUrl:
      "https://media.dodostatic.net/image/r:584x584/11EE7D5ED4C9050D84B1932A18396C2E.avif",
    title: "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏",
    types: [0, 1],
    sizes: [26, 30, 40],
    price: 675,
    category: "meat",
    rating: 9,
  },
  {
    id: 7,
    imageUrl:
      "https://media.dodostatic.net/image/r:584x584/11EE7D5EF5CC13A490103B92A7737459.avif",
    title: "–î–≤–æ–π–Ω–æ–π —Ü—ã–ø–ª–µ–Ω–æ–∫",
    types: [0, 1],
    sizes: [26, 30, 40],
    price: 450,
    category: "closed",
    rating: 10,
  },
  {
    id: 8,
    imageUrl:
      "https://media.dodostatic.net/image/r:584x584/11EEA58E169BBB7189B38C04883BB1BA.avif",
    title: "–ö–∞—Ä–±–æ–Ω–∞—Ä–∞",
    types: [0, 1],
    sizes: [26, 30, 40],
    price: 395,
    category: "meat",
    rating: 10,
  },
  {
    id: 9,
    imageUrl:
      "https://media.dodostatic.net/image/r:584x584/11EE7D5EC8FF89FDB4EB4C2FA1A066FE.avif",
    title: "–¶—ã–ø–ª–µ–Ω–æ–∫ –±–∞—Ä–±–µ–∫—é",
    types: [0, 1],
    sizes: [26, 30, 40],
    price: 285,
    category: "vegetarian",
    rating: 7,
  },
  {
    id: 10,
    imageUrl:
      "https://dodopizza-a.akamaihd.net/static/Img/Products/2f01bd53e7374171838e95f001bae829_760x760.webp",
    title: "–ì–∞–≤–∞–π—Å–∫–∞—è —Å –∞–ª—å—Ñ—Ä–µ–¥–æ",
    types: [0, 1],
    sizes: [26, 30, 40],
    price: 233,
    category: "closed",
    rating: 7,
  },
  {
    id: 11,
    imageUrl:
      "https://dodopizza-a.akamaihd.net/static/Img/Products/6d252652e5dc4a4a8cfb0a234c662c6b_760x760.webp",
    title: "–î–æ–¥–æ",
    types: [0, 1],
    sizes: [30, 40],
    price: 435,
    category: "spicy",
    rating: 9,
  },
];
// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
app.get("/data", (req, res) => {
  res.json(data);
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ ID
app.get("/data/:id", (req, res) => {
  const id = req.params.id;
  const item = data.find((item) => item.id === parseInt(id));
  if (!item) {
    return res.status(404).send("–≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");
  }
  res.json(item);
});

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
app.post("/data", (req, res) => {
  const newItem = req.body;
  data.push(newItem);
  res.status(201).send("–≠–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω");
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ ID
app.put("/data/:id", (req, res) => {
  const id = req.params.id;
  const updatedItem = req.body;
  for (let i = 0; i < data.length; i++) {
    if (data[i].id === parseInt(id)) {
      data[i] = updatedItem;
      return res.send("–≠–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω");
    }
  }
  res.status(404).send("–≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");
});

// –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ ID
app.delete("/data/:id", (req, res) => {
  const id = req.params.id;
  data = data.filter((item) => item.id !== parseInt(id));
  res.send("–≠–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω");
});

// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—è–º
app.get("/category/:category", (req, res) => {
  const { category } = req.params;
  const { sort: sortProperty, search } = req.query;

  let filteredData;
  const dataCopy = [...data];

  if (category !== "all") {
    filteredData = dataCopy.filter(
      ({ category: pizzaCategory }) => pizzaCategory === category
    );
  } else {
    filteredData = dataCopy;
  }

  if (sortProperty === "rating") {
    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ (rating)
    filteredData.sort((a, b) => b.rating - a.rating);
  } else if (sortProperty === "priceUp") {
    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Ü–µ–Ω—ã
    filteredData.sort((a, b) => a.price - b.price);
  } else if (sortProperty === "priceDown") {
    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Ü–µ–Ω—ã
    filteredData.sort((a, b) => b.price - a.price);
  }

  if (search) {
    filteredData = filteredData.filter(({ title }) =>
      title.toLowerCase().includes(search.toLowerCase())
    );
  }

  res.json(filteredData);
});

const PORT = 3000;
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
